---
# This workflow will install Python dependencies, run tests and lint with
# a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PyPI package tests

on:  # yamllint disable-line rule:truthy
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

jobs:
    tests:
        uses: ./.github/workflows/tests.yml

    create-wheels:
        runs-on: ${{ matrix.os }}
        name: ${{ matrix.os }}, python ${{ matrix.python-versions }}
        needs: tests
        environment: release
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-versions: ['3.9', '3.10', '3.11', '3.12', '3.13']
                toolchain:
                    - {compiler: gcc, version: 13}

        steps:
            - name: Checkout source
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Set up Python ${{ matrix.python-versions }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-versions }}

            - name: >
                  Setup ${{ matrix.toolchain.compiler }} fortran compiler
                  version ${{ matrix.toolchain.version }}
              uses: fortran-lang/setup-fortran@v1
              id: setup-fortran
              with:
                  compiler: ${{ matrix.toolchain.compiler }}
                  version: ${{ matrix.toolchain.version }}

            - name: Build sdist and wheel
              run: |
                  python -m pip install build
                  python -m build .

            - name: Upload wheel as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: artifact-${{ matrix.os }}-${{ matrix.cibw_arch }}-wheel
                  path: dist
                  merge-multiple: true

    upload-pypi:
        runs-on: ubuntu-latest
        name: upload release to PyPI
        needs: create-wheels
        environment: release

        permissions:
            # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  path: dist
                  merge-multiple: true

            - name: Publish package distributions to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  skip-existing: true
