---
# This workflow will install Python dependencies, run tests and lint with
# a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: PyPI package tests

on:  # yamllint disable-line rule:truthy
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

jobs:
    tests:
        uses: ./.github/workflows/tests.yml

    create-wheels:
        runs-on: ${{ matrix.os }}
        name: ${{ matrix.os }}
        needs: tests
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Checkout source
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Setup gfortran compiler version 13
              uses: fortran-lang/setup-fortran@v1
              id: setup-fortran
              with:
                  compiler: gcc
                  version: 13
              env:
                  FC: ${{ steps.setup-fortran.outputs.fc }}
                  CC: ${{ steps.setup-fortran.outputs.cc }}

            - name: Set up dev env on Windows.  Nothing on other platforms.
              uses: ilammy/msvc-dev-cmd@v1

            - name: Build wheels
              uses: pypa/cibuildwheel@v2.21.3

              with:
                  output-dir: dist
              env:
                  CIBW_BUILD: cp39-* cp310-* cp311-* cp312-* cp313-*
                  CIBW_SKIP: >
                    '*_i686' '*_win32' '*-macosx_x86_64' '*-macosx_arm64'

                  MACOSX_DEPLOYMENT_TARGET: 14.0

                  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
                  CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014

                  CIBW_BUILD_FRONTEND: build

                  CIBW_BEFORE_BUILD: |
                      python -m pip install --upgrade pip
                      python -m pip install build meson meson-python 'numpy>=2'
                      python -m pip install setuptools_scm
                      python -m pip install pytest
                  # Use delvewheel on windows
                  CIBW_BEFORE_BUILD_WINDOWS: |
                      python -m pip install delvewheel

                  CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: |
                      delvewheel repair -w {dest_dir} {wheel}

                  CIBW_TEST_REQUIRES: pytest
                  CIBW_TEST_COMMAND_LINUX: |
                      cd {project} && python -m pytest
                  CIBW_TEST_COMMAND_MACOS: |
                      cd {project} && python -m pytest
                  CIBW_TEST_COMMAND_WINDOWS: |
                      cd /d {project} && python -m pytest

            - name: Upload wheel as artifact
              uses: actions/upload-artifact@v4
              with:
                  path: dist

    create-sdist:
        runs-on: ubuntu-latest
        name: Create source distribution
        needs: tests
        strategy:
            fail-fast: false

        steps:
            - name: Checkout source
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Set up Python 3.12
              uses: actions/setup-python@v5
              with:
                  python-version: 3.12

            - name: Build sdist
              run: |
                  python -m pip install build
                  python -m build --sdist .

            - name: Upload sdist as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: artifact-sdist
                  path: dist

    upload-pypi:
        runs-on: ubuntu-latest
        name: upload release to PyPI
        needs: [create-wheels, create-sdist]
        environment: release

        permissions:
            # IMPORTANT: this permission is mandatory for trusted publishing
            id-token: write

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  path: dist
                  merge-multiple: true

            - name: Publish package distributions to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  skip-existing: true
