environment:
  matrix:
    - PYTHON_VERSION: "2.7"
      CONDAPATH: 'C:\Miniconda'
    - PYTHON_VERSION: "3.5"
      CONDAPATH: 'C:\Miniconda35'
    - PYTHON_VERSION: "3.6"
      CONDAPATH: 'C:\Miniconda36'
    - PYTHON_VERSION: "3.7"
      CONDAPATH: 'C:\Miniconda37'

cache:
  - '%LOCALAPPDATA%\pip\Cache'
  - '%USERPROFILE%\.cache\matplotlib'

platform:
  - x86
  - x64

matrix:
  fast_finish: false

install:
  - if "%PLATFORM%" == "x86" set PATH=%CONDPATH%\bin;%CONDAPATH%\Scripts;%PATH%
  - if "%PLATFORM%" == "x64" set PATH=%CONDPATH%-x64\bin;%CONDAPATH%-x64\Scripts;%PATH%
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q --name python%PYTHON_VERSION% python=%PYTHON_VERSION% 
  - activate python%PYTHON_VERSION%
  - conda install -q --name python%PYTHON_VERSION% setuptools numpy matplotlib nose pandas wheel scipy sphinx lockfile pip setuptools
  - conda install -q --name python%PYTHON_VERSION% -c anaconda libpython
  - conda install -q --name python%PYTHON_VERSION% -c msys2 m2w64-toolchain
  - python.exe setup.py config_fc
  - python.exe setup.py config --compiler=mingw32 --fcompiler=gfortran
  - python.exe setup.py build --compiler=mingw32
  - python.exe setup.py build

build: off

after_test:
  # This step builds your wheels.
  - python.exe setup.py bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*.whl

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
